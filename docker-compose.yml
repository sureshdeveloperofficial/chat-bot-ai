version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: chatbot_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d chatbot_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  auth-service:
    build: ./auth-service
    ports:
      - "8001:8001"
    environment:
      - SECRET_KEY=your-super-secret-key-change-in-production
      - DATABASE_URL=postgresql://user:password@postgres/chatbot_db
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  user-service:
    build: ./user-service
    ports:
      - "8003:8003"
    environment:
      - DATABASE_URL=postgresql://user:password@postgres/chatbot_db
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  vector-service:
    build: ./vector-service
    ports:
      - "8004:8004"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - STORAGE_PATH=/app/vector_storage
    volumes:
      - vector_storage:/app/vector_storage
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  chat-service:
    build: ./chat-service
    ports:
      - "8002:8002"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - REDIS_URL=redis://redis:6379
      - USER_SERVICE_URL=http://user-service:8003
      - VECTOR_SERVICE_URL=http://vector-service:8004
    depends_on:
      redis:
        condition: service_healthy
      user-service:
        condition: service_healthy
      vector-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  gateway:
    build: ./gateway
    ports:
      - "8000:8000"
    environment:
      - AUTH_SERVICE_URL=http://auth-service:8001
      - CHAT_SERVICE_URL=http://chat-service:8002
      - USER_SERVICE_URL=http://user-service:8003
      - VECTOR_SERVICE_URL=http://vector-service:8004
    depends_on:
      auth-service:
        condition: service_healthy
      chat-service:
        condition: service_healthy
      user-service:
        condition: service_healthy
      vector-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build: ./frontend
    ports:
      - "8501:8501"
    environment:
      - GATEWAY_URL=http://gateway:8000
    depends_on:
      gateway:
        condition: service_healthy

volumes:
  postgres_data:
  redis_data:
  vector_storage: